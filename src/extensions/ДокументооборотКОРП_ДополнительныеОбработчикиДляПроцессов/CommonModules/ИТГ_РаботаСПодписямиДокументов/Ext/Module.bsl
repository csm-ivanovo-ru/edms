///////////////////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ СОДЕРЖИТ ПРОЦЕДУРЫ И ФУНКЦИИ РАБОТЫ С ПОДПИСЯМИ
// 

#Область ПрограммныйИнтерфейс

// Обрабатывает внутренний документ, для которого используется учёт сторон:
//  если состояние документа - подписан, а в табличной части Стороны сведения иные,
//  устанавливат состояние Подписан в табличной части Стороны датой регистрации
//  документа.
//
// Параметры:
//  Событие					 - 	 - обрабатываемое бизнес событие
//  ОбработчикПредставление	 - Строка - представление обработчика событий (для журнала регистрации)
//
Процедура ЗаполнитьСостояниеПодписейВСторонахПоСостояниюДокумента(Знач Документ) Экспорт
	
	Контекст = "ИТГ_РаботаСПодписямиДокументов.ЗаполнитьСостояниеПодписейВСторонахПоСостояниюДокумента";
	
	ИспользоватьСостоянияДокументов = ПолучитьФункциональнуюОпцию("ИспользоватьСостоянияДокументов");
	Если Не ИспользоватьСостоянияДокументов Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьВидыВнутреннихДокументов = ПолучитьФункциональнуюОпцию("ИспользоватьВидыВнутреннихДокументов");
	Если Не ИспользоватьВидыВнутреннихДокументов Тогда
		Возврат;
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.Проверить(
		ДелопроизводствоКлиентСервер.ЭтоВнутреннийДокумент(Документ),
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверное значение параметра Документ. 
				|Ожидалась ссылка на внутренний документ.
				|Полученное значение имеет тип ""%1""'"),
			Метаданные.НайтиПоТипу(ТипЗнч(Документ)).ПолноеИмя()),
		Контекст);
	
	РеквизитыВидаДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.ВидДокумента,
		"ВариантПодписания, ВестиУчетСторон");
		
	Если РеквизитыВидаДокумента.ВестиУчетСторон Тогда
		
		ДокументПодписан = РаботаСПодписямиДокументов.ДокументПодписанСторонами(Документ.Стороны, РеквизитыВидаДокумента.ВариантПодписания);
		СостояниеДокумента = Делопроизводство.ПолучитьСостояниеДокумента(Документ, "СостояниеПодписание");
		
		Если Не ДокументПодписан Тогда 
			Если СостояниеДокумента = Перечисления.СостоянияДокументов.Подписан Тогда 
				
				Попытка
					
					ДокументОбъект = Документ.ПолучитьОбъект();
					
					Для Каждого СтрокаСтороны Из ДокументОбъект.Стороны Цикл
						Если РаботаСПодписямиДокументовКлиентСервер.ЭтоОрганизация(СтрокаСтороны.Сторона)
							И Не СтрокаСтороны.Подписан Тогда
								// Не меняем состояния подписи для организации
						ИначеЕсли РаботаСПодписямиДокументовКлиентСервер.ЭтоКонтрагент(СтрокаСтороны.Сторона)
							И Не СтрокаСтороны.Подписан Тогда
								СтрокаСтороны.Подписан = Истина;
								СтрокаСтороны.ДатаПодписи = ДокументОбъект.ДатаРегистрации;
						КонецЕсли;
					КонецЦикла;
					
					ДокументОбъект.Записать();
					
					ЗаписьЖурналаРегистрации("РаботаСПодписямиДокументов.ЗаполнитьСостояниеПодписейВСторонахПоСостояниюДокумента",
						УровеньЖурналаРегистрации.Предупреждение, , ,
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Сведения о подписи в табличной части Стороны
								|внутреннего документа ""%2"" не соответствуют состоянию документа ""%3"". 
								|Сведения о подписании документа установлены в табличной части Стороны. 
								|Контекст ""%1""'"),
							Контекст, Строка(Документ), Строка(СостояниеДокумента)));
						
				Исключение
					
					ЗаписьЖурналаРегистрации("РаботаСПодписямиДокументов.ЗаполнитьСостояниеПодписейВСторонахПоСостояниюДокумента",
						УровеньЖурналаРегистрации.Предупреждение, , ,
						СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							НСтр("ru = 'Сведения о подписи в табличной части Стороны
								|внутреннего документа ""%2"" не соответствуют состоянию документа ""%3"". 
								|При изменении сведений о подписании документа в табличной части Стороны возникла ошибка. 
								|Контекст ""%1""'"),
							Контекст, Строка(Документ), Строка(СостояниеДокумента)));
					ВызватьИсключение;
						
				КонецПопытки;
					
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
