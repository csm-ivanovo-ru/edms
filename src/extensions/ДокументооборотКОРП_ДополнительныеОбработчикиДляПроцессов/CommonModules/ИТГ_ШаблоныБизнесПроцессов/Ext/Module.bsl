#Область ПрограммныйИнтерфейс

// Проверяет, находится ли руководитель подразделения, указанного в документе,
//  в числе исполнителей задач по документу, как по основному предмету
//  (только по процессам исполнения, рассмотрения, ознакомления)
//
// Параметры:
//  Документ - СправочникСсылка	 - ссылка на внутренний либо входящий документ
// 
// Возвращаемое значение:
//  Булево - Истина, если документ на исполнении, Ложь - если нет
//
Функция ПроверитьРуководительПодразделенияВЧислеИсполнителей(Знач Документ) Экспорт
		
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции_АвтоПодстановкиДляПроцессов

// Получает полную роль делопроизводителя подразделения, осуществляющего делопроизводство по документу.
//
// Параметры:
//  БизнесПроцессОбъект	 - БизнесПроцессОбъект.<Тип бизнес процесса> - процесс, для которого
//  							вычисляется автоподстановка
//  ИмяПредмета			 - СправочникСсылка.ИменаПредметов	 - имя предмета в процессе
// 
// Возвращаемое значение:
//  СправочникСсылка.ПолныеРоли - .
//
Функция ДелопроизводительПодразделенияДокумента(БизнесПроцессОбъект, ИмяПредмета) Экспорт
	
	СтрокаПредмета = БизнесПроцессОбъект.Предметы.Найти(ИмяПредмета, "ИмяПредмета");
	
	Если СтрокаПредмета <> Неопределено Тогда
		
		Если Не ЗначениеЗаполнено(СтрокаПредмета.Предмет) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как не указан предмет ""%1"" процесса.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		ДокументСсылка = СтрокаПредмета.Предмет;
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(ДокументСсылка) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как предмет ""%1"" процесса не является документом.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		ПолнаяРольДелопроизводителя = ПолучитьДелопроизводителяПодразделенияДокумента(ДокументСсылка);
		Возврат ПолнаяРольДелопроизводителя;
		
	Иначе
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найден предмет ""%1"" процесса.'"),
			Строка(ИмяПредмета));
			
	КонецЕсли;

КонецФункции

// Получает полную роль руководителя подразделения, осуществляющего делопроизводство по документу.
//
// Параметры:
//  БизнесПроцессОбъект	 - БизнесПроцессОбъект.<Тип бизнес процесса> - процесс, для которого
//  							вычисляется автоподстановка
//  ИмяПредмета			 - СправочникСсылка.ИменаПредметов	 - имя предмета в процессе
// 
// Возвращаемое значение:
//  СправочникСсылка.ПолныеРоли, СправочникСсылка.Пользователи - 
//
Функция РуководительПодразделенияДокумента(БизнесПроцессОбъект, ИмяПредмета) Экспорт
	
	СтрокаПредмета = БизнесПроцессОбъект.Предметы.Найти(ИмяПредмета, "ИмяПредмета");
	
	Если СтрокаПредмета <> Неопределено Тогда
		
		Если Не ЗначениеЗаполнено(СтрокаПредмета.Предмет) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как не указан предмет ""%1"" процесса.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		ДокументСсылка = СтрокаПредмета.Предмет;
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(ДокументСсылка) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как предмет ""%1"" процесса не является документом.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		РуководительПодразделения = ПолучитьРуководителяПодразделенияДокумента(ДокументСсылка);
		Возврат РуководительПодразделения;
		
	Иначе
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найден предмет ""%1"" процесса.'"),
			Строка(ИмяПредмета));
			
	КонецЕсли;

КонецФункции

// Получает массив исполнителей всех незавершённых задач по документу для процессов исполнения,
//  рассмотрения, ознакомления.
//
// Параметры:
//  БизнесПроцессОбъект	 - БизнесПроцессОбъект.<Тип бизнес процесса> - процесс, для которого
//  							вычисляется автоподстановка
//  ИмяПредмета			 - СправочникСсылка.ИменаПредметов	 - имя предмета в процессе
// 
// Возвращаемое значение:
//  Массив - массив исполнителей
//
Функция ИсполнителиДокументаАктивные(БизнесПроцессОбъект, ИмяПредмета) Экспорт
	
	СтрокаПредмета = БизнесПроцессОбъект.Предметы.Найти(ИмяПредмета, "ИмяПредмета");
	
	Если СтрокаПредмета <> Неопределено Тогда
		
		Если Не ЗначениеЗаполнено(СтрокаПредмета.Предмет) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как не указан предмет ""%1"" процесса.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		ДокументСсылка = СтрокаПредмета.Предмет;
		
		Если Не ДелопроизводствоКлиентСервер.ЭтоСсылкаНаДокумент(ДокументСсылка) Тогда 
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Автоподстановка не может быть выполнена, так как предмет ""%1"" процесса не является документом.'"),
				Строка(ИмяПредмета));
		КонецЕсли;
			
		АктивныеИсполнители = ПолучитьИсполнителейДокументаАктивных(ДокументСсылка);
		Возврат АктивныеИсполнители;
		
	Иначе
		
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найден предмет ""%1"" процесса.'"),
			Строка(ИмяПредмета));
			
	КонецЕсли;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Получает полную роль делопроизводителя подразделения, осуществляющего делопроизводство по документу.
//
// Параметры:
//  Документ - СправочникСсылка	 - ссылка на документ
// 
// Возвращаемое значение:
//  СправочникСсылка.ПолныеРоли - .
//
Функция ПолучитьДелопроизводителяПодразделенияДокумента(Знач Документ) 
	
	ПодразделениеДокумента = Документ.Подразделение;
		
	Если ПодразделениеДокумента.Пустая() Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В документе ""%1"" не заполнено подразделение.'"),
			Строка(Документ));
	КонецЕсли;
	
	// TODO: в дальнейшем - Справочники.РолиИсполнителей.ДелопроизводительПодразделения;
	РольДелопроизводителя = Справочники.РолиИсполнителей.НайтиСоздатьРоль_ДелопроизводительПодразделения();
	
	ПолнаяРольДелопроизводителя = Справочники.ПолныеРоли.НайтиСоздатьПолнуюРоль(
		РольДелопроизводителя,
		ПодразделениеДокумента);
	
	Возврат ПолнаяРольДелопроизводителя;
	
КонецФункции

// Получает полную роль руководителя подразделения, осуществляющего делопроизводство по документу.
//
// Параметры:
//  Документ - СправочникСсылка	 - ссылка на документ
// 
// Возвращаемое значение:
//  СправочникСсылка.ПолныеРоли, СправочникСсылка.Пользователи - 
//
Функция ПолучитьРуководителяПодразделенияДокумента(Знач Документ)
	
	ПодразделениеДокумента = Документ.Подразделение;
		
	Если ПодразделениеДокумента.Пустая() Тогда
		ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'В документе ""%1"" не заполнено подразделение.'"),
			Строка(Документ));
	КонецЕсли;
	
	// TODO: в дальнейшем - Справочники.РолиИсполнителей.РуководительПодразделения;
	РольРуководителяПодразделения = Справочники.РолиИсполнителей.НайтиСоздатьРоль_РуководительПодразделения();
	
	ПолнаяРольРуководителяПодразделения = Справочники.ПолныеРоли.НайтиСоздатьПолнуюРоль(
		РольРуководителяПодразделения,
		ПодразделениеДокумента);
		
	Если БизнесПроцессыИЗадачиСервер.ЕстьИсполнителиРоли(ПолнаяРольРуководителяПодразделения) Тогда
		Возврат ПолнаяРольРуководителяПодразделения;
	Иначе
		Возврат ПодразделениеДокумента.Руководитель;
	КонецЕсли;
		
КонецФункции

// Получает массив исполнителей всех незавершённых задач по документу для процессов исполнения,
//  рассмотрения, ознакомления.
//
// Параметры:
//  Документ - СправочникСсылка	 - ссылка на документ
// 
// Возвращаемое значение:
//  Массив - массив исполнителей
//
Функция ПолучитьИсполнителейДокументаАктивных(Знач Документ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗадачаИсполнителя.Ссылка КАК Ссылка,
		|	ЗадачаИсполнителя.ТекущийИсполнитель КАК ТекущийИсполнитель
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|		ЛЕВОЕ СОЕДИНЕНИЕ Задача.ЗадачаИсполнителя.Предметы КАК ЗадачаИсполнителяПредметы
		|		ПО ЗадачаИсполнителя.Ссылка = ЗадачаИсполнителяПредметы.Ссылка
		|ГДЕ
		|	ЗадачаИсполнителя.Выполнена = ЛОЖЬ
		|	И ЗадачаИсполнителя.ПометкаУдаления = ЛОЖЬ
		|	И (
		|		(ЗадачаИсполнителя.БизнесПроцесс ссылка БизнесПроцесс.Исполнение)
		|		ИЛИ (ЗадачаИсполнителя.БизнесПроцесс ссылка БизнесПроцесс.Ознакомление)
		|		ИЛИ (ЗадачаИсполнителя.БизнесПроцесс ссылка БизнесПроцесс.Рассмотрение)
		|	)
		|	И ЗадачаИсполнителя.СостояниеБизнесПроцесса <> ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Прерван)
		|	И ЗадачаИсполнителя.ТекущийИсполнитель <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И ЗадачаИсполнителя.ТекущийИсполнитель <> ЗНАЧЕНИЕ(Справочник.ПолныеРоли.ПустаяСсылка)
		|	И ЗадачаИсполнителя.ТекущийИсполнитель <> НЕОПРЕДЕЛЕНО
		|	И ЗадачаИсполнителяПредметы.РольПредмета = ЗНАЧЕНИЕ(Перечисление.РолиПредметов.Основной)
		|	И ЗадачаИсполнителя.Предметы.Предмет = &Предмет";
		
	Запрос.УстановитьПараметр("Предмет", Документ);
	
	Выборка = Запрос.Выполнить();
	АктивныеИсполнители = Выборка.Выгрузить().ВыгрузитьКолонку("ТекущийИсполнитель");
	
	Возврат АктивныеИсполнители;
		
КонецФункции

#КонецОбласти
